func main() {
	goChan.Init()
	defer goChan.RunAnalyzer()

	x := goChan.NewChan[int](0)
	y := goChan.NewChan[int](0)
	a := goChan.NewChan[int](0)

	v := goChan.NewRWLock()

	func() {
		GoChanRoutineIndex := goChan.SpawnPre()
		go func() {
			goChan.SpawnPost(GoChanRoutineIndex)
			v.Lock(); x.Send(1); v.Unlock()
		}()
	}()

	func() {
		GoChanRoutineIndex := goChan.SpawnPre()
		go func() {
			goChan.SpawnPost(GoChanRoutineIndex)
			{
				x.Receive(); x.Send(1)
			}
		}()
	}()

	func() {
		GoChanRoutineIndex := goChan.SpawnPre()
		go func() {
			goChan.SpawnPost(GoChanRoutineIndex)
			y.Send(1); x.Receive()
		}()
	}()

	goChan.PreSelect(true, a.GetIdPre(true))
	select {
	case sel_XVlBzgba := <-a.GetChan():
		a.Post(true, sel_XVlBzgba)
	default:
		goChan.PostDefault()
	}
	time.Sleep(4 * time.Second)
}